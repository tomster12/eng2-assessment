@namespace(uri="http://cs.york.ac.uk/eng2/202425/offers", prefix="dis")
package offers;

class Catalogue {
  val Product[*] products;
  val Category[*] categories;
  val Tag[*] tags;
  val OfferRule[*] rules;
}

class Product {
  attr String name;
  ref Category category;
  ref Tag[*] tags;
}

class Category {
  attr String name;
  val Category[*] subcategories;
}

class Tag {
  attr String name;
}

class OfferRule {
  attr String name;

  val Condition[*] conditions;
  val Action[*] actions;

  ref OfferRule triggersIfMatch;
  ref OfferRule triggersIfNotMatch;
  ref OfferRule triggersAlways;
}

abstract class Target {}

class ProductTarget extends Target {
	ref Product product;
}

class ProductWithTagTarget extends Target {
	ref Tag[*] tags;
}

abstract class Condition {}

class ContainsTargetCondition extends Condition {
  val Target target;
  attr int minCount;
}

class MaxDailyProductOrdersCondition extends Condition {
	ref Product product;
	attr int maxCount;
}

class MinimumTotalOrderCondition extends Condition {
	attr double total;
}

class RecurringYearlyDateCondition extends Condition {
	attr int month;
	attr int day;
}

abstract class Action {}

class TotalPercentDiscountAction extends Action {
	attr double percentage;
}

class TotalAbsoluteDiscountAction extends Action {
	attr double amount;
}

class TargetPercentDiscountAction extends Action {
  val Target target;
  attr double percentage;
}

class ReplaceTargetCostAction extends Action {
	val Target target;
	attr int maxCount;
	attr double cost;
}

